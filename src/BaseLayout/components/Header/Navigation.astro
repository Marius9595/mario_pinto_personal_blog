---
//TODO (NO-URGENTE): Debe ser un React Component para testear el estado de la navegaci√≥n

let currentPath = Astro.request.url;

const paths = [
  //{path: '/about/', name: 'About'}, //TODO (URGENTE): Agregar About Page
  {path: '/blog/', name: 'Blog'},
];
---

<div class="nav-links">

    <a href={"/"}
       class={
           paths.find(
               (path) => currentPath.includes(path.path))
               ? '' : 'isInPage'}
    >
        Home
    </a>

  {
    paths.map((path) => {
      const isInPage = (
          currentPath.includes(path.path)
      );
      return <a href={path.path}  class={isInPage ? 'isInPage' : ''}>{path.name}</a>
    })
  }
</div>

<style>
    .nav-links {
        display: none;
        background-color: var(--color-bg);

        a {
            display: block;
            text-align: center;
            padding: 10px 0;
            text-decoration: none;
            font-size: var(--font-size-md);
            font-weight: bold;
            text-transform: uppercase;
            color: var(--color-in-primary);
        }
    }

    .expanded {
        display: unset;
    }

    .isInPage {
        font-weight: bold;
        text-decoration: underline var(--color-secondary)!important;
        text-decoration-thickness: 5px !important;
        cursor: not-allowed;
        pointer-events: none;
    }

    .nav-links a:hover,
    .nav-links a:focus {
        text-decoration: underline var(--color-secondary);
        transition: text-decoration 0.3s;
    }

    @media screen and (min-width: 636px) {
        .nav-links {
            margin-left: 5em;
            display: block;
            position: static;
            width: auto;
            background: none;
        }

        .nav-links a {
            display: inline-block;
            padding: 15px 20px;
        }
    }
</style>
